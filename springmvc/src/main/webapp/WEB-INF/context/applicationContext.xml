<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:webflow-config="http://www.springframework.org/schema/webflow-config"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/webflow-config
        http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd">
    <!-- Activates scanning of @Repository and @Service and @Component -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/npc"/>
        <property name="username" value="postgres"/>
        <property name="password" value="123456"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.springmvc.model.Product</value>
                <value>com.springmvc.model.Department</value>
                <value>com.springmvc.model.Employee</value>
                <value>com.springmvc.model.Job</value>
                <value>com.springmvc.model.Provider</value>
                <value>com.springmvc.model.Customer</value>
                <value>com.springmvc.model.PurchaseInvoice</value>
                <value>com.springmvc.model.Role</value>
                <value>com.springmvc.model.RoleDetail</value>
                <value>com.springmvc.model.SaleInvoice</value>
                <value>com.springmvc.model.Type</value>
                <value>com.springmvc.model.User</value>
            </list>
        </property>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <security:http auto-config="true" use-expressions="true">
        <security:form-login login-page="/login"
                             login-processing-url="/j_spring_security_check"
                             username-parameter="j_username"
                             password-parameter="j_password"
                             authentication-failure-url="/login?error"
                             default-target-url="/home"/>
        <security:logout logout-url="/logout" delete-cookies="JSESSIONID" logout-success-url="/login?logout"/>
        <security:csrf disabled="true"/>
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="admin@gmail.com" password="admin"
                               authorities="ROLE_USER"/>
                <security:user name="congphuong@gmail.com" password="Conghpuong1"
                               authorities="ROLE_ADMIN"/>
            </security:user-service>
            <!--            <security:jdbc-user-service-->
            <!--                    data-source-ref="dataSource"-->
            <!--                    authorities-by-username-query="SELECT-->
            <!--				emailId,authorities FROM authorities WHERE emailId =?"-->
            <!--                    users-by-username-query="SELECT-->
            <!--				emailId, password, enabled FROM users WHERE emailId=? " />-->
        </security:authentication-provider>
    </security:authentication-manager>

</beans>